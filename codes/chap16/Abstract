네트워크 흐름(Network Flow). - 솔직히 이해가 잘 안 됨.

1. 네트워크 흐름을 배우는 의의
network flow와 관련된 문제는 '효율 좋게 다항식 시간으로 풀 수 있는 문제'를 상징함.
네트워크 흐름은 어느 정도 제약 조건이라면 표현할 수 있는 유연성을 가지고 있으며, 응용 영역도 풍부함.
이 장에서는 max-flow problem(최대 흐름 문제)와 min-cut problem(최소 컷 문제)를 중심으로 설명하며,
directed graph를 대상으로 설명하며, 무향 그래프에서도 같은 방식으로 적용가능하다.

2. 그래프 연결도
-최대 흐름 문제에서 각 변의 용량을 1로 설정한 특수 케이스임.
-edge connectivity(변 연결도) : 두 꼭짓점 s, t에 대해 서로 변을 공유하지 않는 s-t path의 개수
변 연결도는 그래프 네트워크의 robustness(강건성)을 평가하는 지표로 예전부터 활발히 연구되어 왔음.
또한 서로 변을 공유하지 않으면 edge-disjoint(변 서로소)라고 한다.
cut : vertex 집합을 분할한 부분 집합 (S, T)
S에 시작점, T에 끝점이 있는 변 집합을 컷 (S, T)에 관한 cut set(컷 집합)이라 함.
또한 컷 (S, T)의 용량(capacity)을 컷 집합에 포함되는 변의 개수로 정의하고 c(S,T)라 표현함.

2) 최소 컷 문제
유향 그래프 G = (V, E)와 두 꼭짓점 s, t가 주어졌을 때 s-t 컷 중에서 용량이 최소인 것을 구하라.
(=그래프에서 가능한 적은 개수의 edge(변)을 제거해 s-t 사이를 분리하는 문제임.

*변 연결도에 관한 문제의 약 쌍대성(Weak Duality)
변 서로소인 s-t path의 최대 개수 <= s-t 컷의 최소 용량.

k개의 변 서로소인 s-t path 집합이 있을 때 만약 어떤 s-t cut이 존재하고 그 용량이 바로 k라면 다음이 성립함.
변 서로소인 s-t path의 최대 개수 = s-t cut의 최소 용량 = k
즉, 이 경우라면 실제로 얻은 k개의 변 서로소인 s-t path로 만든 집합이 생각해 볼 수 있는 최대 크기가 된다는 것이 확정됨.
변 연결도를 구하는 문제와 최소 컷 문제는 서로 쌍대 문제임.

*변 연결도에 관한 문제의 강 쌍대성(Strong Duality)
변 서로소인 s-t path의 최대 개수 = s-t 컷의 최소 용량.

-augmenting path : 증가 패스
-residual graph : 잔여 그래프

3. 최대 흐름 문제(max-flow problem)와 최소 컷 문제
각 edge e가 용량(capacity)를 가지는 일반적인 경우의 최대 흐름 문제에 대해 다루자.
각 변 e에 대해 옮길 수 있는 상한값인 용량 c(e)가 정해져 있음.
꼭짓점 s에서 꼭짓점 t로 얼마나 많은 유량을 최대로 보낼 수 있을까?
아래 조건을 만족 할 때, x를 flow 또는 허용 흐름(flow)라고 부름.
	1)임의의 변 e에 대해 0<=x(e) <=c(e)
	2)s, t 이외의 임의의 꼭짓점 v에서 v로 들어가는 변 e에 대한 x(e)의 총합과 v에서 나가는 변 e에 대한 x(e)의 총합은 같음.
이 대 각 변 e에 대한 x(e)를 변 e의 유량이라 부르고, 꼭짓점 s에서 나가는 변 e에 대한 x(e)의 총합을 흐름 x의 총유량이라 부름.
총유량이 가장 큰 흐름을 최대 흐름(max-flow)라고 부르고, 최대 흐름을 구하는 문제를 max-flow problem이라 함.

2)흐름의 성질.
변 연결도 관련 문제는 각 변의 용량이 1인 최대 흐름 문제라고 볼 수 있음.
변 연결도를 구하는 문제의 변 서로소라는 조건은 용량이 1인 변에 2 이상의 유량을 흘릴 수 없다는 내용에 해당함.
흐름 x는 다음과 같은 성질을 만족.
	임의의 S에 속하는 s, T에 속하는 t를 만족하는 컷(S,T)에 대해 S에서 T를 향해 나가는 각 변 e의 유량 x(e)의 총합에서, 
	T에서 S를 향해 들어오는 각 변 e의 유량 x(e)의 총합을 뺀 값이 흐름 x의 총유량과 일치함. (나가는거 - 들어오는 거 = 총유량)

변 연결도 문제와 유사하게 최대 흐름 문제도 쌍대 문제인 최소 컷 문제를 생각해 볼 수 있음.
*최소 컷 문제
용량이 존재하는 유향 그래프 G = (V, E)와 두 꼭짓점 s, t가 주어졌을 때 s-t cut 중에서 용량이 최소인 것을 구하기.
강 쌍대성 --> 최대 흐름의 총유량 =  s-t 컷의 최소 용량

잔여 그래프에서 찾은 s-t path에 흐름(유량)을 흘릴 수 있을 만큼 흘려 보내는 처리를 잔여 그래프 위에 s-t path가 없어질 때까지 반복함. --> Ford-Fulkerson algorithm
이 알고리즘이 종료될 때 총 유량 F의 흐름 x가 구해지며, 실은 이 때 어떤 s-t cut이 구성되고 그 용량이 F가 됨.

psuedo-polynomial time(의사 다항식 시간) : 수치에 관해서는 다항식이지만 실제로는 다항식 시간이 아닌 복잡도.
Ford-Fulkerson algorithm = O(F|E|) (F는 최대 유량, |E|는 edge 개수)
개선 --> Orlin이 개발한 O(|V||E|) 알고리즘.

4. Ford-Fulkerson algorithm  구현 (16_1)

5.응용 예(1) : 이분 매칭(bipartite matching)

6.응용 예(2) : 점 연결도

7.응용 예(3) : 프로젝트 선택 문제 - open-pit mining problem

8.정리
