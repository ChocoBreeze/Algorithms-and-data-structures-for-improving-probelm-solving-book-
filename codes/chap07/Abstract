탐욕법
선택 과정에서 나중은 생각하지 않고 바로 다음 단계만 봤을 때 
가장 유리한 선택지를 고르는 행위를 반복하여 답을 도출하는 방법

1.탐욕법이란?
동적 계획법 : 각 선택 순간까지 최적화하는 부분을 부분 문제로 나누고, 부분 문제 사이의 전이를 살펴 봄
탐욕법 : 역시 어떤 선택을 반복해서 결과를 최적화하는 유형의 문제에 적용가능한 방법이지만,
모든 전이 방법을 확인하는 대신, 바로 다음 단계만을 봤을 때 최선인 선택을 반복함.
예시 - 동전 (7_1)

2. 탐욕법으로 최적해를 구할 수 없는 경우
현재 최선이 아니더라도 향후 최적인 선택지를 버릴 가능성이 있어서 반드시 최적해를 도출하는 것은 아님.
탐욕법으로 최적해를 도출 가능한 문제는 그 구조 자체가 좋은 성질을 내포하고 있을 가능성이 높으므로 문제 구조에 주목해서 최적의 해법이 필요한 이유를 생각해 보는 것이 중요함.
문제 구조 자체가 좋아서 탐욕법으로 최적해를 도출 가능한 예로는 minimum spanning tree 문제가 있음.
탐욕법에 기반한 Kruskal algorithm으로 최적해를 도출 가능함 - 배경으로는 matroid와 discrete convex라는 구조가 있음.

최적해가 아니더라도 탐욕법으로 최적해에 가까운 답을 얻을 수 있는 경우도 존재함 --> 18.3, 18.7

3. 탐욕법 패턴 (1) : 교환해도 악화되지 않음.
최적화 문제를 푸는 경우에, 미리 탐색 범위를 좁힐 수 없을지 검토해보는 것은 유용함.
x에 대한 함수 f의 최대값을 구하려고 한다. 임의의 x에 대해 조금 변형을 가하면 어떤 성질 P를 만족하는, x와 유사한 별도의 해 x'를 얻을 수 있고,
f(x') >= f(x)가 성립한다고 하자. 이때 전체 x 중에서 P를 만족하는 것만 대상으로 하더라도 그 안에 f(x)를 최대로 만드는 x가 포함된다.
예시 - interval scheduling problem
구간에 관한 문제 --> 구간 종료 시간을 기준으로 정렬해서 생각해 보면 쉬워질 때가 많다.

4. 탐욕법 패턴 (2) : 현재가 좋으면 미래도 좋음 (7_3)
탐욕법으로 최적해를 찾을 수 있는 문제 중에는 문제 구조가 단조성과 연관된 경우가 많음.
탐욕법이 성립하기 위한 단조성.
-N단계의 선택을 통해 최종 점수를 최대화하는 최적화 문제가 있다고 하자.
이 문제는 최초 i 단계까지의 시점에서 획득한 점수가 높으면 높을수록 남은 단계를 최적화해서 얻는 최종적인 점수가 높아지는 구조다.
이 때 각 단계마다 독립적으로 그 시점에 점수가 최대가 되는 탐욕법을 사용하면 모든 단계가 끝났을 때 점수가 최대화되는 것을 알 수 있다.
예시 링크 : https://atcoder.jp/contests/agc009/tasks/agc009_a

5. 정리
추후 등장하는 최단경로를 푸는 dijkstra alg, 최소 신장 트리 문제를 푸는 kruskal alg에도 탐욕법이 사용됨.

탐욕법 뿐만 아니라 다른 방식에도 적용 가능한 2가지
-탐색 범위를 줄여서 현실적인 계산 시간에 전체 탐색이 가능해진다.
-어떤 기준에 따라 의사 결정 순서를 고정해도 문제가 없으므로 그 순서에 따라 동적 계획법으로 최적해를 구할 수 있다.

원래 문제 자체 구조가 좋은 경우에 탐욕법으로 최적해를 구할 수 있는 문제가 많음.
최적이 아니더라도 최적해에 가까운 답을 도출해낼 순 있음.
일단 그러한 문제에 대해서도 탐욕법을 적용해보자!.
